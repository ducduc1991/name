local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local macro = {}
local isRecording = false
local startTime = 0
local shouldRecord = true  -- Flag to determine record or play mode

local function createButton(name, position, size, color)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = size
    button.Position = position
    button.BackgroundColor3 = color
    button.Text = name
    button.TextColor3 = Color3.new(1, 1, 1)
    button.TextScaled = true
    button.Font = Enum.Font.GothamBold
    button.BorderSizePixel = 0
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = button
    
    return button
end

local function startRecording()
    macro = {}
    isRecording = true
    startTime = tick()
    print("Macro recording started")
end

local function stopRecording()
    isRecording = false
    print("Macro recording stopped")
end

local function playbackMacro()
    for _, action in ipairs(macro) do
        if action.inputType == "MouseButton1" then
            mouse1press()
            wait(0.1)
            mouse1release()
        elseif action.inputType == "MouseMovement" then
            mousemoveabs(action.position.X, action.position.Y)
        end
        wait(action.timestamp - (action.timestamp > 0 and macro[_ - 1].timestamp or 0))
    end
    print("Macro playback completed")
end

local function setupGUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "MacroGUI"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

    local frame
